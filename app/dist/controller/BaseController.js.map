{"version":3,"file":"BaseController.js","names":["BaseController","Controller","extend","getOwnerComponent","_getOwnerComponent","Controller.prototype.getOwnerComponent.call","this","getRouter","_getRouter","UIComponent","getRouterFor","getResourceBundle","_getResourceBundle","oModel","getModel","_getModel","sName","getView","setModel","_setModel","navTo","_navTo","oParameters","bReplace","undefined","onNavBack","_onNavBack","sPreviousHash","History","getInstance","getPreviousHash","window","history","go"],"sources":["BaseController.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\r\nimport UIComponent from \"sap/ui/core/UIComponent\";\r\nimport AppComponent from \"../Component\";\r\nimport Model from \"sap/ui/model/Model\";\r\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\r\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\r\nimport Router from \"sap/ui/core/routing/Router\";\r\nimport History from \"sap/ui/core/routing/History\";\r\n\r\n/**\r\n * @namespace com.github.dfenerski.ui5_ssr.controller\r\n */\r\nexport default abstract class BaseController extends Controller {\r\n\t/**\r\n\t * Convenience method for accessing the component of the controller's view.\r\n\t * @returns The component of the controller's view\r\n\t */\r\n\tpublic getOwnerComponent(): AppComponent {\r\n\t\treturn super.getOwnerComponent() as AppComponent;\r\n\t}\r\n\r\n\t/**\r\n\t * Convenience method to get the components' router instance.\r\n\t * @returns The router instance\r\n\t */\r\n\tpublic getRouter(): Router {\r\n\t\treturn UIComponent.getRouterFor(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Convenience method for getting the i18n resource bundle of the component.\r\n\t * @returns The i18n resource bundle of the component\r\n\t */\r\n\tpublic getResourceBundle(): ResourceBundle | Promise<ResourceBundle> {\r\n\t\tconst oModel = this.getOwnerComponent().getModel(\"i18n\") as ResourceModel;\r\n\t\treturn oModel.getResourceBundle();\r\n\t}\r\n\r\n\t/**\r\n\t * Convenience method for getting the view model by name in every controller of the application.\r\n\t * @param [sName] The model name\r\n\t * @returns The model instance\r\n\t */\r\n\tpublic getModel(sName?: string): Model {\r\n\t\treturn this.getView().getModel(sName);\r\n\t}\r\n\r\n\t/**\r\n\t * Convenience method for setting the view model in every controller of the application.\r\n\t * @param oModel The model instance\r\n\t * @param [sName] The model name\r\n\t * @returns The current base controller instance\r\n\t */\r\n\tpublic setModel(oModel: Model, sName?: string): BaseController {\r\n\t\tthis.getView().setModel(oModel, sName);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Convenience method for triggering the navigation to a specific target.\r\n\t * @public\r\n\t * @param sName Target name\r\n\t * @param [oParameters] Navigation parameters\r\n\t * @param [bReplace] Defines if the hash should be replaced (no browser history entry) or set (browser history entry)\r\n\t */\r\n\tpublic navTo(sName: string, oParameters?: object, bReplace?: boolean): void {\r\n\t\tthis.getRouter().navTo(sName, oParameters, undefined, bReplace);\r\n\t}\r\n\r\n\t/**\r\n\t * Convenience event handler for navigating back.\r\n\t * It there is a history entry we go one step back in the browser history\r\n\t * If not, it will replace the current entry of the browser history with the main route.\r\n\t */\r\n\tpublic onNavBack(): void {\r\n\t\tconst sPreviousHash = History.getInstance().getPreviousHash();\r\n\t\tif (sPreviousHash !== undefined) {\r\n\t\t\twindow.history.go(-1);\r\n\t\t} else {\r\n\t\t\tthis.getRouter().navTo(\"main\", {}, undefined, true);\r\n\t\t}\r\n\t}\r\n}\r\n"],"mappings":"+IASA,MAG8BA,EAAuBC,EAAUC,OAAA,0DAKvDC,kBAAiB,SAAAC,IACvB,OAAAC,mCAAAC,KACD,EAMOC,UAAS,SAAAC,IACf,OAAOC,EAAYC,aAAaJ,KACjC,EAMOK,kBAAiB,SAAAC,IACvB,MAAMC,EAASP,KAAKH,oBAAoBW,SAAS,QACjD,OAAOD,EAAOF,mBACf,EAOOG,SAAQ,SAAAC,EAACC,GACf,OAAOV,KAAKW,UAAUH,SAASE,EAChC,EAQOE,SAAQ,SAAAC,EAACN,EAAeG,GAC9BV,KAAKW,UAAUC,SAASL,EAAQG,GAChC,OAAOV,IACR,EASOc,MAAK,SAAAC,EAACL,EAAeM,EAAsBC,GACjDjB,KAAKC,YAAYa,MAAMJ,EAAOM,EAAaE,UAAWD,EACvD,EAOOE,UAAS,SAAAC,IACf,MAAMC,EAAgBC,EAAQC,cAAcC,kBAC5C,GAAIH,IAAkBH,UAAW,CAChCO,OAAOC,QAAQC,IAAI,EACpB,KAAO,CACN3B,KAAKC,YAAYa,MAAM,OAAQ,CAAC,EAAGI,UAAW,KAC/C,CACD,IAAC,OArE4BxB,CAAc","ignoreList":[]}