{"version":3,"file":"Component.js","names":["models","_interopRequireDefault","__models","Component","UIComponent","extend","metadata","manifest","interfaces","init","_init","UIComponent.prototype.init.call","this","setModel","createDeviceModel","createAppModel","getRouter","initialize","SSR_CONTROLS","getRenderer","ElementMetadata","prototype","renderer","call","includes","getName","controlClass","getClass","render","onAfterRendering","rm","control","preservedContent","document","querySelector","getId","unsafeHtml","outerHTML","console","error","remove","getContentDensityClass","_getContentDensityClass","contentDensityClass","undefined","body","classList","contains","Device","support","touch"],"sources":["Component.ts"],"sourcesContent":["import Device from 'sap/ui/Device';\r\nimport Control from 'sap/ui/core/Control';\r\nimport ElementMetadata from 'sap/ui/core/ElementMetadata';\r\nimport RenderManager from 'sap/ui/core/RenderManager';\r\nimport UIComponent from 'sap/ui/core/UIComponent';\r\nimport models from './model/models';\r\n\r\n/**\r\n * @namespace com.github.dfenerski.ui5_ssr\r\n */\r\nexport default class Component extends UIComponent {\r\n    public static metadata = {\r\n        manifest: 'json',\r\n        interfaces: ['sap.ui.core.IAsyncContentCreation'],\r\n    };\r\n\r\n    private contentDensityClass: string;\r\n\r\n    public init(): void {\r\n        // call the base component's init function\r\n        super.init();\r\n\r\n        // create the device model\r\n        this.setModel(models.createDeviceModel(), 'device');\r\n\r\n        // create the app model\r\n        this.setModel(models.createAppModel(), 'app');\r\n\r\n        // create the views based on the url/hash\r\n        this.getRouter().initialize();\r\n\r\n        const SSR_CONTROLS = ['sap.m.Page'];\r\n        // @ts-expect-error behold\r\n        const getRenderer = ElementMetadata.prototype.getRenderer;\r\n        // @ts-expect-error behold\r\n        ElementMetadata.prototype.getRenderer = function () {\r\n            const renderer = getRenderer.call(this);\r\n            //\r\n            if (SSR_CONTROLS.includes(this.getName())) {\r\n                const controlClass = this.getClass();\r\n                const render = renderer.render;\r\n                const onAfterRendering =\r\n                    controlClass.prototype.onAfterRendering;\r\n                renderer.render = function (\r\n                    rm: RenderManager,\r\n                    control: Control,\r\n                ) {\r\n                    // const preservedContent$ = <any>(\r\n                    //     RenderManager.findPreservedContent(control.getId())\r\n                    // );\r\n                    const preservedContent = document.querySelector(\r\n                        `#sap-ui-ssr #${control.getId()}`,\r\n                    );\r\n                    if (preservedContent) {\r\n                        // preservedContent.remove();\r\n                        rm.unsafeHtml(preservedContent.outerHTML);\r\n                        console.error('Preserved content rendered');\r\n                        return;\r\n                    }\r\n                    render.call(renderer, rm, control);\r\n                };\r\n                controlClass.prototype.onAfterRendering = function () {\r\n                    const preservedContent = document.querySelector(\r\n                        `#sap-ui-ssr #${this.getId()}`,\r\n                    );\r\n                    if (preservedContent) {\r\n                        preservedContent.remove();\r\n                    }\r\n                    onAfterRendering.call(this);\r\n                };\r\n            }\r\n            return renderer;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n     * design mode class should be set, which influences the size appearance of some controls.\r\n     * @public\r\n     * @returns css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n     */\r\n    public getContentDensityClass(): string {\r\n        if (this.contentDensityClass === undefined) {\r\n            // check whether FLP has already set the content density class; do nothing in this case\r\n            if (\r\n                document.body.classList.contains('sapUiSizeCozy') ||\r\n                document.body.classList.contains('sapUiSizeCompact')\r\n            ) {\r\n                this.contentDensityClass = '';\r\n            } else if (!Device.support.touch) {\r\n                // apply \"compact\" mode if touch is not supported\r\n                this.contentDensityClass = 'sapUiSizeCompact';\r\n            } else {\r\n                // \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n                this.contentDensityClass = 'sapUiSizeCozy';\r\n            }\r\n        }\r\n        return this.contentDensityClass;\r\n    }\r\n}\r\n"],"mappings":"4OAKOA,EAAMC,EAAAC,GAEb,MAGqBC,EAAkBC,EAAWC,OAAA,0CAChCC,SAAW,CACrBC,SAAU,OACVC,WAAY,CAAC,sCAKVC,KAAI,SAAAC,IAEPC,sBAAAC,MAGAA,KAAKC,SAASb,EAAOc,oBAAqB,UAG1CF,KAAKC,SAASb,EAAOe,iBAAkB,OAGvCH,KAAKI,YAAYC,aAEjB,MAAMC,EAAe,CAAC,cAEtB,MAAMC,EAAcC,EAAgBC,UAAUF,YAE9CC,EAAgBC,UAAUF,YAAc,WACpC,MAAMG,EAAWH,EAAYI,KAAKX,MAElC,GAAIM,EAAaM,SAASZ,KAAKa,WAAY,CACvC,MAAMC,EAAed,KAAKe,WAC1B,MAAMC,EAASN,EAASM,OACxB,MAAMC,EACFH,EAAaL,UAAUQ,iBAC3BP,EAASM,OAAS,SACdE,EACAC,GAKA,MAAMC,EAAmBC,SAASC,cAC7B,gBAAeH,EAAQI,WAE5B,GAAIH,EAAkB,CAElBF,EAAGM,WAAWJ,EAAiBK,WAC/BC,QAAQC,MAAM,8BACd,MACJ,CACAX,EAAOL,KAAKD,EAAUQ,EAAIC,EAC9B,EACAL,EAAaL,UAAUQ,iBAAmB,WACtC,MAAMG,EAAmBC,SAASC,cAC7B,gBAAetB,KAAKuB,WAEzB,GAAIH,EAAkB,CAClBA,EAAiBQ,QACrB,CACAX,EAAiBN,KAAKX,KAC1B,CACJ,CACA,OAAOU,CACX,CACJ,EAQOmB,uBAAsB,SAAAC,IACzB,GAAI9B,KAAK+B,sBAAwBC,UAAW,CAExC,GACIX,SAASY,KAAKC,UAAUC,SAAS,kBACjCd,SAASY,KAAKC,UAAUC,SAAS,oBACnC,CACEnC,KAAK+B,oBAAsB,EAC/B,MAAO,IAAKK,EAAOC,QAAQC,MAAO,CAE9BtC,KAAK+B,oBAAsB,kBAC/B,KAAO,CAEH/B,KAAK+B,oBAAsB,eAC/B,CACJ,CACA,OAAO/B,KAAK+B,mBAChB,IAAC,OAxFgBxC,CAAS","ignoreList":[]}